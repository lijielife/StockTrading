//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.4927
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.4927 版自动生成。
// 
#pragma warning disable 1591

namespace CalcDailyRank.ccpostWS {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="RemotingRespondSoap", Namespace="http://tempuri.org/")]
    public partial class RemotingRespond : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback UserOrders_HandledOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserNotifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback Ranks_HandledOperationCompleted;
        
        private System.Threading.SendOrPostCallback ClearOperationCompleted;
        
        private System.Threading.SendOrPostCallback InitializeOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback FlashAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public RemotingRespond() {
            this.Url = global::CalcDailyRank.Properties.Settings.Default.CalcDailyRank_ccpostWS_RemotingRespond;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event UserOrders_HandledCompletedEventHandler UserOrders_HandledCompleted;
        
        /// <remarks/>
        public event UserNotifierCompletedEventHandler UserNotifierCompleted;
        
        /// <remarks/>
        public event Ranks_HandledCompletedEventHandler Ranks_HandledCompleted;
        
        /// <remarks/>
        public event ClearCompletedEventHandler ClearCompleted;
        
        /// <remarks/>
        public event InitializeCompletedEventHandler InitializeCompleted;
        
        /// <remarks/>
        public event RemoveAllCompletedEventHandler RemoveAllCompleted;
        
        /// <remarks/>
        public event FlashAllCompletedEventHandler FlashAllCompleted;
        
        /// <remarks/>
        public event DeleteCompletedEventHandler DeleteCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserOrders_Handled", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserOrders_Handled(int playID, int userID, byte result) {
            object[] results = this.Invoke("UserOrders_Handled", new object[] {
                        playID,
                        userID,
                        result});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserOrders_HandledAsync(int playID, int userID, byte result) {
            this.UserOrders_HandledAsync(playID, userID, result, null);
        }
        
        /// <remarks/>
        public void UserOrders_HandledAsync(int playID, int userID, byte result, object userState) {
            if ((this.UserOrders_HandledOperationCompleted == null)) {
                this.UserOrders_HandledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserOrders_HandledOperationCompleted);
            }
            this.InvokeAsync("UserOrders_Handled", new object[] {
                        playID,
                        userID,
                        result}, this.UserOrders_HandledOperationCompleted, userState);
        }
        
        private void OnUserOrders_HandledOperationCompleted(object arg) {
            if ((this.UserOrders_HandledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserOrders_HandledCompleted(this, new UserOrders_HandledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserNotifier", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UserNotifier(int playID, int[] UserIDs) {
            this.Invoke("UserNotifier", new object[] {
                        playID,
                        UserIDs});
        }
        
        /// <remarks/>
        public void UserNotifierAsync(int playID, int[] UserIDs) {
            this.UserNotifierAsync(playID, UserIDs, null);
        }
        
        /// <remarks/>
        public void UserNotifierAsync(int playID, int[] UserIDs, object userState) {
            if ((this.UserNotifierOperationCompleted == null)) {
                this.UserNotifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserNotifierOperationCompleted);
            }
            this.InvokeAsync("UserNotifier", new object[] {
                        playID,
                        UserIDs}, this.UserNotifierOperationCompleted, userState);
        }
        
        private void OnUserNotifierOperationCompleted(object arg) {
            if ((this.UserNotifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserNotifierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ranks_Handled", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Ranks_Handled(int playID) {
            object[] results = this.Invoke("Ranks_Handled", new object[] {
                        playID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void Ranks_HandledAsync(int playID) {
            this.Ranks_HandledAsync(playID, null);
        }
        
        /// <remarks/>
        public void Ranks_HandledAsync(int playID, object userState) {
            if ((this.Ranks_HandledOperationCompleted == null)) {
                this.Ranks_HandledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRanks_HandledOperationCompleted);
            }
            this.InvokeAsync("Ranks_Handled", new object[] {
                        playID}, this.Ranks_HandledOperationCompleted, userState);
        }
        
        private void OnRanks_HandledOperationCompleted(object arg) {
            if ((this.Ranks_HandledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Ranks_HandledCompleted(this, new Ranks_HandledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Clear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Clear(int playID) {
            this.Invoke("Clear", new object[] {
                        playID});
        }
        
        /// <remarks/>
        public void ClearAsync(int playID) {
            this.ClearAsync(playID, null);
        }
        
        /// <remarks/>
        public void ClearAsync(int playID, object userState) {
            if ((this.ClearOperationCompleted == null)) {
                this.ClearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnClearOperationCompleted);
            }
            this.InvokeAsync("Clear", new object[] {
                        playID}, this.ClearOperationCompleted, userState);
        }
        
        private void OnClearOperationCompleted(object arg) {
            if ((this.ClearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ClearCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Initialize", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Initialize(int playID, string machineKey) {
            this.Invoke("Initialize", new object[] {
                        playID,
                        machineKey});
        }
        
        /// <remarks/>
        public void InitializeAsync(int playID, string machineKey) {
            this.InitializeAsync(playID, machineKey, null);
        }
        
        /// <remarks/>
        public void InitializeAsync(int playID, string machineKey, object userState) {
            if ((this.InitializeOperationCompleted == null)) {
                this.InitializeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitializeOperationCompleted);
            }
            this.InvokeAsync("Initialize", new object[] {
                        playID,
                        machineKey}, this.InitializeOperationCompleted, userState);
        }
        
        private void OnInitializeOperationCompleted(object arg) {
            if ((this.InitializeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitializeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/RemoveAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RemoveAll(int playID, int userID) {
            this.Invoke("RemoveAll", new object[] {
                        playID,
                        userID});
        }
        
        /// <remarks/>
        public void RemoveAllAsync(int playID, int userID) {
            this.RemoveAllAsync(playID, userID, null);
        }
        
        /// <remarks/>
        public void RemoveAllAsync(int playID, int userID, object userState) {
            if ((this.RemoveAllOperationCompleted == null)) {
                this.RemoveAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAllOperationCompleted);
            }
            this.InvokeAsync("RemoveAll", new object[] {
                        playID,
                        userID}, this.RemoveAllOperationCompleted, userState);
        }
        
        private void OnRemoveAllOperationCompleted(object arg) {
            if ((this.RemoveAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/FlashAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FlashAll() {
            this.Invoke("FlashAll", new object[0]);
        }
        
        /// <remarks/>
        public void FlashAllAsync() {
            this.FlashAllAsync(null);
        }
        
        /// <remarks/>
        public void FlashAllAsync(object userState) {
            if ((this.FlashAllOperationCompleted == null)) {
                this.FlashAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFlashAllOperationCompleted);
            }
            this.InvokeAsync("FlashAll", new object[0], this.FlashAllOperationCompleted, userState);
        }
        
        private void OnFlashAllOperationCompleted(object arg) {
            if ((this.FlashAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FlashAllCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Delete", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Delete(string key) {
            this.Invoke("Delete", new object[] {
                        key});
        }
        
        /// <remarks/>
        public void DeleteAsync(string key) {
            this.DeleteAsync(key, null);
        }
        
        /// <remarks/>
        public void DeleteAsync(string key, object userState) {
            if ((this.DeleteOperationCompleted == null)) {
                this.DeleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOperationCompleted);
            }
            this.InvokeAsync("Delete", new object[] {
                        key}, this.DeleteOperationCompleted, userState);
        }
        
        private void OnDeleteOperationCompleted(object arg) {
            if ((this.DeleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UserOrders_HandledCompletedEventHandler(object sender, UserOrders_HandledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserOrders_HandledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserOrders_HandledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void UserNotifierCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void Ranks_HandledCompletedEventHandler(object sender, Ranks_HandledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Ranks_HandledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Ranks_HandledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void ClearCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void InitializeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void RemoveAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void FlashAllCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4927")]
    public delegate void DeleteCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591